version: '3'

services:
  redis:
    container_name: microservice-redis
    build: ./servers/redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/redis/data

  faker_api:
    container_name: microservice-faker-api
    image: jaxgeller/lwan
    volumes:
      - ./workspace/gateway/ping:/lwan/wwwroot
    ports:
      - "8000:8080"
    networks:
      - feathers

  gateway:
    container_name: microservice-krakend
    image: devopsfaith/krakend
    volumes:
      - ./workspace/gateway/conf:/etc/krakend
    ports:
      - "8080:8080"
    depends_on:
      - redis
    links:
      - faker_api
    networks:
      - feathers

  mongodb:
    container_name: microservice-mongodb
    image: mongo
    environment:
      - "MONGO_INITDB_DATABASE:feathers-micro"
      - "MONGO_INITDB_ROOT_USERNAME:root"
      - "MONGO_INITDB_ROOT_PASSWORD:rootpassword"
    ports:
      - 27017:27017
    expose:
      - "27017"
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - feathers

  cars:
    build: ./workspace/cars
    container_name: microservice-cars
    image: microservice/cars
    ports:
      - 3031:3031
    networks:
      - feathers

  bikes:
      build: ./workspace/bikes
      container_name: microservice-bikes
      image: microservice/bikes
      ports:
        - 3032:3032
      networks:
        - feathers

  users:
    build: ./workspace/users
    container_name: microservice-users
    image: microservice/users
    ports:
      - 3033:3033
    depends_on:
      - redis
    networks:
      - feathers

networks:
  feathers:

volumes:
  mongodb_data_container:
  redis-data:
